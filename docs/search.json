[{"path":"https://aubreyodom.github.io/LegATo-docs/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 LegATo authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://aubreyodom.github.io/LegATo-docs/articles/LegATo_vignette.html","id":"streamlining-longitudinal-microbiome-profiling-in-bioconductor","dir":"Articles","previous_headings":"Introduction to LegATo: Longitudinal mEtaGenomic Analysis TOolkit","what":"Streamlining longitudinal microbiome profiling in Bioconductor","title":"Introduction to LegATo","text":"LegATo suite open-source software tools longitudinal microbiome analysis extendable several different study forms optimal ease--use researchers. Microbiome time-series data presents distinct challenges including complex covariate dependencies variety longitudinal study designs. toolkit allow researchers determine microbial taxa affected time perturbations onset disease lifestyle choices, predict effects perturbations time, including changes composition stability commensal bacteria. LegATo integrates visualization, modeling testing procedures. supplemented hierarchical clustering tools multivariate generalized estimating equations (JGEEs) adjust compositional nature microbiome data.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/articles/LegATo_vignette.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Introduction to LegATo","text":"","code":"library(LegATo)"},{"path":"https://aubreyodom.github.io/LegATo-docs/articles/LegATo_vignette.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Introduction to LegATo","text":"utilizing nasopharyngeal microbiome data Zambian Infants Odom et al.:","code":"dat <- system.file(\"extdata\", \"MAE.RDS\", package = \"LegATo\") |>   readRDS()  dat_0.05 <- filter_animalcules_MAE(dat, 0.05)  parsed <- parse_MAE_SE(dat, which_assay = \"MicrobeGenetics\", type = \"MAE\") alluvial_df <- get_long_data(dat_0.05, \"genus\") ## Registered S3 method overwritten by 'httr': ##   method         from   ##   print.response rmutil group_vars <- c(\"HIVStatus\", \"MothChild\") get_summary_table(dat_0.05, group_vars) ##   HIVStatus MothChild mean_reads  sd_reads min_reads max_reads num_total ## 1   Control    Infant  156209.16 408000.52     24176   3016276        68 ## 2   Control    Mother   68648.79  50526.74     14339    168157        19 ## 3       HIV    Infant   90008.20  51395.08     13218    202079        61 ## 4       HIV    Mother   72277.53  48180.28     20118    208029        19 best_genus <- get_top_taxa(dat_0.05, \"genus\") best_species <- get_top_taxa(dat_0.05, \"species\") this_palette <- rainbow(20)  plot_stacked_area(dat_0.05, \"genus\",                           \"HIVStatus\",                          \"timepoint\",                          palette_input = this_palette) plot_stacked_bar(dat_0.05, \"genus\",               \"HIVStatus\",              \"timepoint\",              palette_input = this_palette) plot_alluvial(dat = dat_0.05,                taxon_level = \"genus\",                covariate_1 = \"HIVStatus\",               covariate_time = \"timepoint\",               palette_input = this_palette,               subtitle = \"Alluvial plot\") plot_spaghetti(dat = dat_0.05,                covariate_time = \"timepoint\",                covariate_1 = \"HIVStatus\",                unit_var = \"Subject\",                taxon_level = \"genus\",                which_taxon = \"Corynebacterium\",                palette_input= this_palette,                title = \"Spaghetti Plot\",                subtitle = NULL) +   ggplot2::xlab(\"Infant Age (Days)\") +   ggplot2::ylab(\"Relative Abundance (log CPM)\")"},{"path":"https://aubreyodom.github.io/LegATo-docs/articles/LegATo_vignette.html","id":"gee-modeling","dir":"Articles","previous_headings":"Data","what":"GEE Modeling","title":"Introduction to LegATo","text":"","code":"output <- run_gee_model(dat, unit_var = \"Subject\",                         fixed_cov = c(\"HIVStatus\", \"MothChild\", \"Age\"),                         corstr = \"ar1\",                         plot_out = FALSE,                         plotsave_loc = \".\",                         plot_terms = NULL)  head(output) ##   Coefficient Coefficient Estimate Standard Error Statistic Unadj p-value ## 1 (Intercept)           47024.4796      39794.316 1.3963874    0.23732938 ## 2 (Intercept)            2070.1721       3238.258 0.4086862    0.52263712 ## 3 (Intercept)            9530.8640       5106.186 3.4839455    0.06196683 ## 4 (Intercept)           61209.2478      25927.329 5.5733783    0.01823554 ## 5 (Intercept)           47416.3910      20515.628 5.3417968    0.02082000 ## 6 (Intercept)            -701.1414       1529.727 0.2100794    0.64670520 ##   Lower 95% CI Upper 95% CI           Taxon Adj p-value ## 1  -30970.9456   125019.905  Dolosigranulum   0.4669326 ## 2   -4276.6975     8417.042   Streptococcus   0.6148113 ## 3    -477.0759    19538.804       Moraxella   0.4669326 ## 4   10392.6166   112025.879  Staphylococcus   0.4669326 ## 5    7206.4993    87626.283 Corynebacterium   0.4669326 ## 6   -3699.3512     2297.068     Haemophilus   0.7164696 # Trying out plotting #run_gee_model(dat, unit_var = \"Subject\", #              taxon_level = \"genus\", #              fixed_cov = c(\"MothChild\", \"HIVStatus\", \"Age\"), #              corstr = \"ar1\", #              plot_out = TRUE, #              plotsave_loc = #\"/restricted/projectnb/infant-microbiome/work/aodom\", #              plot_terms = \"MothChild\", #              width = 6, height = 4, units = \"in\", scale = 0.7) #"},{"path":"https://aubreyodom.github.io/LegATo-docs/articles/LegATo_vignette.html","id":"add-hotelling","dir":"Articles","previous_headings":"","what":"Add hotelling","title":"Introduction to LegATo","text":"","code":"test_hotelling_t2(dat = dat_0.05,                   test_index = which(dat_0.05$MothChild == \"Infant\" &                                        dat_0.05$timepoint == 6),                   taxon_level = \"genus\",                   # To avoid n < p, use top 5-6 species                   num_taxa = 6,                   paired = TRUE,                   grouping_var = \"HIVStatus\",                   pairing_var = \"pairing\") ## $df1 ## [1] 6 ##  ## $df2 ## [1] 2 ##  ## $crit_F ## [1] 19.32953 ##  ## $F_stat ## [1] 2.578132 ##  ## $pvalue ## [1] 0.3056466 test_hotelling_t2(dat = dat_0.05,                   test_index = which(dat_0.05$MothChild == \"Mother\" &                                       dat_0.05$timepoint == 0),                   taxon_level = \"genus\",                   # To avoid n < p, use top 5-6 species                   num_taxa = 12,                   grouping_var = \"HIVStatus\",                   unit_var = \"Subject\",                   paired = FALSE) ## $df1 ## [1] 12 ##  ## $df2 ## [1] 7 ##  ## $crit_F ## [1] 3.574676 ##  ## $F_stat ## [1] 0.4781539 ##  ## $pvalue ## [1] 0.875078 sessionInfo() ## R version 4.3.1 (2023-06-16) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: AlmaLinux 8.9 (Midnight Oncilla) ##  ## Matrix products: default ## BLAS:   /share/pkg.8/r/4.3.1/install/lib64/R/lib/libRblas.so  ## LAPACK: /share/pkg.8/r/4.3.1/install/lib64/R/lib/libRlapack.so;  LAPACK version 3.11.0 ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: America/New_York ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] LegATo_0.99.0    BiocStyle_2.28.0 ##  ## loaded via a namespace (and not attached): ##   [1] rstudioapi_0.15.0           jsonlite_1.8.8              ##   [3] umap_0.2.10.0               MultiAssayExperiment_1.28.0 ##   [5] magrittr_2.0.3              farver_2.1.1                ##   [7] rmarkdown_2.25              geepack_1.3.9               ##   [9] fs_1.6.3                    zlibbioc_1.48.0             ##  [11] ragg_1.2.5                  vctrs_0.6.5                 ##  [13] memoise_2.0.1               RCurl_1.98-1.14             ##  [15] askpass_1.2.0               BiocBaseUtils_1.4.0         ##  [17] htmltools_0.5.7             S4Arrays_1.2.0              ##  [19] broom_1.0.5                 SparseArray_1.2.3           ##  [21] sass_0.4.8                  TBSignatureProfiler_1.15.0  ##  [23] bslib_0.6.1                 htmlwidgets_1.6.4           ##  [25] desc_1.4.3                  plyr_1.8.9                  ##  [27] covr_3.6.2                  plotly_4.10.2               ##  [29] cachem_1.0.8                lifecycle_1.0.4             ##  [31] iterators_1.0.14            pkgconfig_2.0.3             ##  [33] Matrix_1.6-5                R6_2.5.1                    ##  [35] fastmap_1.1.1               GenomeInfoDbData_1.2.11     ##  [37] MatrixGenerics_1.14.0       clue_0.3-65                 ##  [39] digest_0.6.34               colorspace_2.1-0            ##  [41] spatial_7.3-16              S4Vectors_0.40.2            ##  [43] DESeq2_1.40.1               RSpectra_0.16-1             ##  [45] textshaping_0.3.6           GenomicRanges_1.54.1        ##  [47] vegan_2.6-4                 labeling_0.4.3              ##  [49] fansi_1.0.6                 httr_1.4.7                  ##  [51] abind_1.4-5                 mgcv_1.8-42                 ##  [53] compiler_4.3.1              withr_3.0.0                 ##  [55] backports_1.4.1             inline_0.3.19               ##  [57] BiocParallel_1.36.0         highr_0.10                  ##  [59] MASS_7.3-60                 tsne_0.1-3.1                ##  [61] openssl_2.1.1               DelayedArray_0.28.0         ##  [63] fBasics_4022.94.9000        permute_0.9-7               ##  [65] tools_4.3.1                 ape_5.7-1                   ##  [67] rentrez_1.2.3               glue_1.7.0                  ##  [69] stabledist_0.7-1            nlme_3.1-162                ##  [71] grid_4.3.1                  cluster_2.1.4               ##  [73] reshape2_1.4.4              generics_0.1.3              ##  [75] gtable_0.3.4                tidyr_1.3.0                 ##  [77] data.table_1.14.10          utf8_1.2.4                  ##  [79] XVector_0.42.0              rmutil_1.1.10               ##  [81] BiocGenerics_0.48.1         ggrepel_0.9.3               ##  [83] foreach_1.5.2               pillar_1.9.0                ##  [85] stringr_1.5.1               limma_3.56.2                ##  [87] splines_4.3.1               dplyr_1.1.4                 ##  [89] lattice_0.21-8              GUniFrac_1.8                ##  [91] tidyselect_1.2.0            locfit_1.5-9.8              ##  [93] knitr_1.45                  bookdown_0.34               ##  [95] IRanges_2.36.0              edgeR_3.42.4                ##  [97] SummarizedExperiment_1.32.0 stats4_4.3.1                ##  [99] xfun_0.41                   Biobase_2.62.0              ## [101] statmod_1.5.0               timeDate_4032.109           ## [103] matrixStats_1.2.0           DT_0.28                     ## [105] rex_1.2.1                   stringi_1.8.3               ## [107] lazyeval_0.2.2              yaml_2.3.8                  ## [109] evaluate_0.23               codetools_0.2-19            ## [111] timeSeries_4030.106.9000    tibble_3.2.1                ## [113] BiocManager_1.30.22         cli_3.6.2                   ## [115] rpart_4.1.19                reticulate_1.30             ## [117] systemfonts_1.0.4           munsell_0.5.0               ## [119] jquerylib_0.1.4             Rcpp_1.0.12                 ## [121] GenomeInfoDb_1.38.5         stable_1.1.6                ## [123] png_0.1-8                   XML_3.99-0.16               ## [125] parallel_4.3.1              modeest_2.4.0               ## [127] ellipsis_0.3.2              pkgdown_2.0.7               ## [129] ggplot2_3.4.4               assertthat_0.2.1            ## [131] animalcules_1.18.2          ggalluvial_0.12.5           ## [133] bitops_1.0-7                viridisLite_0.4.2           ## [135] scales_1.3.0                statip_0.2.3                ## [137] purrr_1.0.2                 crayon_1.5.2                ## [139] rlang_1.1.3                 shinyjs_2.1.0"},{"path":"https://aubreyodom.github.io/LegATo-docs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aubrey Odom. Author, maintainer. Yilong Zhang. Contributor. Jared Pincus. Consultant. Jordan Pincus. Artist.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Odom (2024). LegATo: LegATo: Longitudinal mEtaGenomic Analysis Toolkit. R package version 0.99.0.","code":"@Manual{,   title = {LegATo: LegATo: Longitudinal mEtaGenomic Analysis Toolkit},   author = {Aubrey Odom},   year = {2024},   note = {R package version 0.99.0}, }"},{"path":[]},{"path":"https://aubreyodom.github.io/LegATo-docs/index.html","id":"a-longitudinal-metagenomic-analysis-toolkit-","dir":"","previous_headings":"","what":"A Longitudinal mEtaGenomic Analysis Toolkit","title":"LegATo: Longitudinal mEtaGenomic Analysis Toolkit","text":"LegATo suite open-source software tools longitudinal microbiome analysis. extendable several different study forms optimal ease--use researchers. Microbiome time-series data presents distinct challenges including complex covariate dependencies variety longitudinal study designs. toolkit allow researchers determine microbial taxa affected time perturbations onset disease lifestyle choices, predict effects perturbations time, including changes composition stability commensal bacteria. LegATo integrates visualization, modeling testing procedures. currently development, soon supplemented hierarchical clustering tools multivariate generalized estimating equations (JGEEs) adjust compositional nature microbiome data.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/index.html","id":"the-story-behind-the-name","dir":"","previous_headings":"","what":"The Story Behind the Name","title":"LegATo: Longitudinal mEtaGenomic Analysis Toolkit","text":"music, legato indicates notes played sung smoothly connected, without noticeable break . LegATo package facilitates cohesive interconnected understanding microbial communities represented samples, much like smooth connection musical notes legato passage. Therefore, LegATo metaphorically represents smooth connected analysis longitudinal metagenomic data, drawing inspiration musical term convey sense continuity harmony modeling process.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"LegATo: Longitudinal mEtaGenomic Analysis Toolkit","text":"Documentation tutorials LegATo available website. Check thorough tutorial proper usage package .","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"LegATo: Longitudinal mEtaGenomic Analysis Toolkit","text":"LegATo requires R Version 4.3. Install development version package Github:","code":"if (!requireNamespace(\"devtools\", quietly=TRUE))   install.packages(\"devtools\") devtools::install_github(\"aubreyodom/LegATo\")"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/LegATo-package.html","id":null,"dir":"Reference","previous_headings":"","what":"LegATo: LegATo: Longitudinal mEtaGenomic Analysis Toolkit — LegATo-package","title":"LegATo: LegATo: Longitudinal mEtaGenomic Analysis Toolkit — LegATo-package","text":"Streamlining longitudinal microbiome profiling Bioconductor.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/LegATo-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"LegATo: LegATo: Longitudinal mEtaGenomic Analysis Toolkit — LegATo-package","text":"Maintainer: Aubrey Odom aodom@bu.edu (ORCID) contributors: Yilong Zhang elong0527@gmail.com [contributor] Jared Pincus pincus@bu.edu (ORCID) [consultant] Jordan Pincus pincus@bu.edu [artist]","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/clean_animalcules_MAE.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean up taxon names in a MultiAssayExperiment — clean_animalcules_MAE","title":"Clean up taxon names in a MultiAssayExperiment — clean_animalcules_MAE","text":"functional optional method fixing taxon names MultiAssayExperiment run filter_animalcules_MAE. Specifically removes brackets species names, replaces species labeled \"others\" \"sp.\" finally replaces underscores spaces.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/clean_animalcules_MAE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean up taxon names in a MultiAssayExperiment — clean_animalcules_MAE","text":"","code":"clean_animalcules_MAE(dat)"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/clean_animalcules_MAE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean up taxon names in a MultiAssayExperiment — clean_animalcules_MAE","text":"dat MultiAssayExperiment object specially formatted animalcules output.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/clean_animalcules_MAE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean up taxon names in a MultiAssayExperiment — clean_animalcules_MAE","text":"animalcules-formatted MultiAssayExperiment object   cleaned-taxonomy nomenclature.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/clean_animalcules_MAE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean up taxon names in a MultiAssayExperiment — clean_animalcules_MAE","text":"","code":"in_dat <- system.file(\"extdata/MAE_small.RDS\", package = \"LegATo\") |> readRDS() clean_animalcules_MAE(in_dat) #> A MultiAssayExperiment object of 1 listed #>  experiment with a user-defined name and respective class. #>  Containing an ExperimentList class object of length 1: #>  [1] MicrobeGenetics: SummarizedExperiment with 100 rows and 50 columns #> Functionality: #>  experiments() - obtain the ExperimentList instance #>  colData() - the primary/phenotype DataFrame #>  sampleMap() - the sample coordination DataFrame #>  `$`, `[`, `[[` - extract colData columns, subset, or experiment #>  *Format() - convert into a long or wide DataFrame #>  assays() - convert ExperimentList to a SimpleList of matrices #>  exportClass() - save data to flat files"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/filter_animalcules_MAE.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a MultiAssayExperiment to a top percentage of taxa and label the rest\nas ","title":"Filter a MultiAssayExperiment to a top percentage of taxa and label the rest\nas ","text":"function takes animalcules-formatted MultiAssayExperiment (MAE) object identifies taxa \"genus\" level represent <filter_pct average relative abundance across samples MAE. identification genus level, taxa across genus species levels consolidated category \"\".","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/filter_animalcules_MAE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a MultiAssayExperiment to a top percentage of taxa and label the rest\nas ","text":"","code":"filter_animalcules_MAE(dat, filter_pct = 0.05)"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/filter_animalcules_MAE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a MultiAssayExperiment to a top percentage of taxa and label the rest\nas ","text":"dat MultiAssayExperiment object specially formatted animalcules output. filter_pct double strictly 0 1.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/filter_animalcules_MAE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a MultiAssayExperiment to a top percentage of taxa and label the rest\nas ","text":"animalcules-formatted MultiAssayExperiment object   appropriate filtration.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/filter_animalcules_MAE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter a MultiAssayExperiment to a top percentage of taxa and label the rest\nas ","text":"","code":"in_dat <- system.file(\"extdata/MAE_small.RDS\", package = \"LegATo\") |> readRDS() filter_animalcules_MAE(in_dat, 0.01) #> A MultiAssayExperiment object of 1 listed #>  experiment with a user-defined name and respective class. #>  Containing an ExperimentList class object of length 1: #>  [1] MicrobeGenetics: SummarizedExperiment with 92 rows and 50 columns #> Functionality: #>  experiments() - obtain the ExperimentList instance #>  colData() - the primary/phenotype DataFrame #>  sampleMap() - the sample coordination DataFrame #>  `$`, `[`, `[[` - extract colData columns, subset, or experiment #>  *Format() - convert into a long or wide DataFrame #>  assays() - convert ExperimentList to a SimpleList of matrices #>  exportClass() - save data to flat files"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_long_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a long data.frame from a MultiAssayExperiment counts object — get_long_data","title":"Create a long data.frame from a MultiAssayExperiment counts object — get_long_data","text":"function takes MultiAssayExperiment object specified taxon level interest creates long data.frame can used easily plotting counts data.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_long_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a long data.frame from a MultiAssayExperiment counts object — get_long_data","text":"","code":"get_long_data(dat, taxon_level, log = FALSE, counts_to_CPM = FALSE)"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_long_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a long data.frame from a MultiAssayExperiment counts object — get_long_data","text":"dat MultiAssayExperiment object specially formatted animalcules output. taxon_level Character string indicating level taxonomy aggregate counts data. Must name column MultiAssayExperiment::rowData(dat). log logical. Indicate whether assay returned log whichever assay specified \"output_name\". counts_to_CPM = TRUE well, log CPM assay also created. Default FALSE. counts_to_CPM logical. argument applies input_type counts assay. TRUE, output assays include normalized CPM assay. log = TRUE well, log CPM assay also created. Default TRUE.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_long_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a long data.frame from a MultiAssayExperiment counts object — get_long_data","text":"data.frame consisting counts data, taxa,   metadata.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_long_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a long data.frame from a MultiAssayExperiment counts object — get_long_data","text":"","code":"in_dat <- system.file(\"extdata/MAE_small.RDS\", package = \"LegATo\") |> readRDS() out <- get_long_data(in_dat, \"genus\", log = TRUE, counts_to_CPM = TRUE) #> Registered S3 method overwritten by 'rmutil': #>   method         from #>   print.response httr head(out) #>           taxon Sample Subject    Sex Month Group Pairing HairLength      Age #> 1 Acinetobacter    X-1      S1 Female     1     A       1   54.59018 37.60217 #> 2 Acinetobacter    X-2      S2 Female     1     B       1   69.32642 66.77243 #> 3 Acinetobacter    X-3      S3 Female     1     A       2   42.91915 53.23820 #> 4 Acinetobacter    X-4      S4 Female     1     B       2   53.18740 52.56244 #> 5 Acinetobacter    X-5      S5 Female     1     A       3   44.28454 60.37946 #> 6 Acinetobacter    X-6      S6 Female     1     B       3   37.66513 42.47814 #>   Sample_id Abundance #> 1       X-1      4484 #> 2       X-2     19992 #> 3       X-3    150783 #> 4       X-4       886 #> 5       X-5      1008 #> 6       X-6      1928"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_stacked_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a long data.frame with grouped abundances from a MultiAssayExperiment counts object — get_stacked_data","title":"Create a long data.frame with grouped abundances from a MultiAssayExperiment counts object — get_stacked_data","text":"function takes MultiAssayExperiment object specified taxon level interest creates long data.frame can used easily plotting counts data stacked bar plot stacked area chart. function groups taxa computes relative abundance within taxa strata.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_stacked_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a long data.frame with grouped abundances from a MultiAssayExperiment counts object — get_stacked_data","text":"","code":"get_stacked_data(dat, taxon_level = \"genus\", covariate_1, covariate_time)"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_stacked_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a long data.frame with grouped abundances from a MultiAssayExperiment counts object — get_stacked_data","text":"dat MultiAssayExperiment object specially formatted animalcules output. taxon_level Character string indicating level taxonomy aggregate counts data. Must name column MultiAssayExperiment::rowData(dat). covariate_1 Character string, name covariate `dat` color group samples. Default NULL. covariate_time Character string giving name discrete time-based covariate metadata group abundances .","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_stacked_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a long data.frame with grouped abundances from a MultiAssayExperiment counts object — get_stacked_data","text":"data.frame consisting counts data, taxa, metadata.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_stacked_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a long data.frame with grouped abundances from a MultiAssayExperiment counts object — get_stacked_data","text":"","code":"in_dat <- system.file(\"extdata/MAE_small.RDS\", package = \"LegATo\") |> readRDS() get_stacked_data(in_dat, \"genus\", covariate_1 = \"Sex\", covariate_time = \"Month\") #>                  taxon covariate_1 covariate_t        value #> 1        Acinetobacter      Female           1 5.549263e-01 #> 2            Aeromonas      Female           1 1.579758e-02 #> 3     Alkalihalophilus      Female           1 1.042267e-03 #> 4             Brucella      Female           1 1.057197e-02 #> 5      Corynebacterium      Female           1 5.915736e-02 #> 6        Cutibacterium      Female           1 2.979282e-03 #> 7              Delftia      Female           1 2.440755e-06 #> 8         Enterobacter      Female           1 5.800568e-04 #> 9          Escherichia      Female           1 3.678564e-02 #> 10         Haemophilus      Female           1 6.209398e-04 #> 11             Kocuria      Female           1 6.662898e-04 #> 12            Listeria      Female           1 2.055714e-02 #> 13           Moraxella      Female           1 6.377616e-02 #> 14          Mycoplasma      Female           1 1.965690e-02 #> 15  Noviherbaspirillum      Female           1 1.192899e-04 #> 16               Other      Female           1 8.867107e-04 #> 17          Paracoccus      Female           1 5.876816e-02 #> 18         Pseudomonas      Female           1 3.701786e-02 #> 19      Staphylococcus      Female           1 1.020357e-01 #> 20       Streptococcus      Female           1 8.279496e-03 #> 21           Weissella      Female           1 5.772429e-03 #> 22       Acinetobacter        Male           1 7.653653e-01 #> 23           Aeromonas        Male           1 6.454990e-03 #> 24    Alkalihalophilus        Male           1 4.187020e-04 #> 25            Brucella        Male           1 6.202516e-03 #> 26     Corynebacterium        Male           1 8.361092e-02 #> 27       Cutibacterium        Male           1 7.269789e-03 #> 28             Delftia        Male           1 0.000000e+00 #> 29        Enterobacter        Male           1 6.140963e-03 #> 30         Escherichia        Male           1 1.465457e-03 #> 31         Haemophilus        Male           1 1.453136e-03 #> 32             Kocuria        Male           1 0.000000e+00 #> 33            Listeria        Male           1 2.083036e-02 #> 34           Moraxella        Male           1 1.994987e-03 #> 35          Mycoplasma        Male           1 7.195907e-03 #> 36  Noviherbaspirillum        Male           1 0.000000e+00 #> 37               Other        Male           1 0.000000e+00 #> 38          Paracoccus        Male           1 1.985546e-02 #> 39         Pseudomonas        Male           1 5.732503e-03 #> 40      Staphylococcus        Male           1 5.666421e-02 #> 41       Streptococcus        Male           1 6.327726e-03 #> 42           Weissella        Male           1 3.017109e-03 #> 43       Acinetobacter      Female           2 2.437613e-01 #> 44           Aeromonas      Female           2 1.391922e-02 #> 45    Alkalihalophilus      Female           2 4.326438e-04 #> 46            Brucella      Female           2 2.843060e-02 #> 47     Corynebacterium      Female           2 2.906003e-01 #> 48       Cutibacterium      Female           2 4.794796e-03 #> 49             Delftia      Female           2 6.781684e-05 #> 50        Enterobacter      Female           2 5.535890e-04 #> 51         Escherichia      Female           2 9.204748e-03 #> 52         Haemophilus      Female           2 1.273125e-03 #> 53             Kocuria      Female           2 4.993988e-04 #> 54            Listeria      Female           2 7.013477e-02 #> 55           Moraxella      Female           2 1.312362e-02 #> 56          Mycoplasma      Female           2 6.402683e-03 #> 57  Noviherbaspirillum      Female           2 0.000000e+00 #> 58               Other      Female           2 7.413018e-04 #> 59          Paracoccus      Female           2 7.040139e-02 #> 60         Pseudomonas      Female           2 2.319198e-02 #> 61      Staphylococcus      Female           2 1.932255e-01 #> 62       Streptococcus      Female           2 2.539212e-02 #> 63           Weissella      Female           2 3.849096e-03 #> 64       Acinetobacter        Male           2 2.338258e-01 #> 65           Aeromonas        Male           2 2.973978e-03 #> 66    Alkalihalophilus        Male           2 0.000000e+00 #> 67            Brucella        Male           2 5.086937e-02 #> 68     Corynebacterium        Male           2 3.780536e-01 #> 69       Cutibacterium        Male           2 6.791380e-03 #> 70             Delftia        Male           2 4.247027e-04 #> 71        Enterobacter        Male           2 3.747377e-04 #> 72         Escherichia        Male           2 0.000000e+00 #> 73         Haemophilus        Male           2 9.993005e-05 #> 74             Kocuria        Male           2 0.000000e+00 #> 75            Listeria        Male           2 7.787796e-02 #> 76           Moraxella        Male           2 1.226766e-02 #> 77          Mycoplasma        Male           2 1.739804e-03 #> 78  Noviherbaspirillum        Male           2 0.000000e+00 #> 79               Other        Male           2 0.000000e+00 #> 80          Paracoccus        Male           2 1.469100e-01 #> 81         Pseudomonas        Male           2 5.504251e-03 #> 82      Staphylococcus        Male           2 4.970205e-02 #> 83       Streptococcus        Male           2 2.749029e-02 #> 84           Weissella        Male           2 5.094501e-03 #> 85       Acinetobacter      Female           3 4.473384e-01 #> 86           Aeromonas      Female           3 4.808669e-03 #> 87    Alkalihalophilus      Female           3 1.118665e-04 #> 88            Brucella      Female           3 2.775884e-02 #> 89     Corynebacterium      Female           3 2.163773e-01 #> 90       Cutibacterium      Female           3 1.254615e-03 #> 91             Delftia      Female           3 1.491449e-04 #> 92        Enterobacter      Female           3 3.696449e-04 #> 93         Escherichia      Female           3 2.238329e-04 #> 94         Haemophilus      Female           3 2.085964e-06 #> 95             Kocuria      Female           3 8.285828e-05 #> 96            Listeria      Female           3 6.919301e-02 #> 97           Moraxella      Female           3 4.387693e-03 #> 98          Mycoplasma      Female           3 1.039901e-02 #> 99  Noviherbaspirillum      Female           3 2.213423e-05 #> 100              Other      Female           3 0.000000e+00 #> 101         Paracoccus      Female           3 9.260826e-02 #> 102        Pseudomonas      Female           3 7.211173e-03 #> 103     Staphylococcus      Female           3 9.381225e-02 #> 104      Streptococcus      Female           3 1.906107e-02 #> 105          Weissella      Female           3 4.828210e-03 #> 106      Acinetobacter        Male           3 9.373308e-01 #> 107          Aeromonas        Male           3 2.760035e-04 #> 108   Alkalihalophilus        Male           3 0.000000e+00 #> 109           Brucella        Male           3 7.346110e-04 #> 110    Corynebacterium        Male           3 8.611660e-03 #> 111      Cutibacterium        Male           3 1.326811e-05 #> 112            Delftia        Male           3 0.000000e+00 #> 113       Enterobacter        Male           3 0.000000e+00 #> 114        Escherichia        Male           3 2.760035e-04 #> 115        Haemophilus        Male           3 0.000000e+00 #> 116            Kocuria        Male           3 8.845409e-06 #> 117           Listeria        Male           3 1.563372e-03 #> 118          Moraxella        Male           3 2.624004e-02 #> 119         Mycoplasma        Male           3 6.059130e-03 #> 120 Noviherbaspirillum        Male           3 0.000000e+00 #> 121              Other        Male           3 0.000000e+00 #> 122         Paracoccus        Male           3 1.483868e-02 #> 123        Pseudomonas        Male           3 5.520069e-04 #> 124     Staphylococcus        Male           3 2.192964e-03 #> 125      Streptococcus        Male           3 4.654292e-04 #> 126          Weissella        Male           3 8.372311e-04 #> 127      Acinetobacter      Female           4 2.202415e-01 #> 128          Aeromonas      Female           4 5.550086e-03 #> 129   Alkalihalophilus      Female           4 5.488474e-04 #> 130           Brucella      Female           4 3.940695e-02 #> 131    Corynebacterium      Female           4 4.383634e-01 #> 132      Cutibacterium      Female           4 1.585227e-04 #> 133            Delftia      Female           4 0.000000e+00 #> 134       Enterobacter      Female           4 6.485395e-04 #> 135        Escherichia      Female           4 3.270003e-04 #> 136        Haemophilus      Female           4 4.928350e-05 #> 137            Kocuria      Female           4 0.000000e+00 #> 138           Listeria      Female           4 9.230997e-02 #> 139          Moraxella      Female           4 4.901624e-03 #> 140         Mycoplasma      Female           4 2.348193e-03 #> 141 Noviherbaspirillum      Female           4 0.000000e+00 #> 142              Other      Female           4 0.000000e+00 #> 143         Paracoccus      Female           4 1.065317e-01 #> 144        Pseudomonas      Female           4 4.782627e-03 #> 145     Staphylococcus      Female           4 7.375929e-02 #> 146      Streptococcus      Female           4 3.794768e-03 #> 147          Weissella      Female           4 6.277792e-03 #> 148      Acinetobacter        Male           4 5.518243e-01 #> 149          Aeromonas        Male           4 8.681639e-03 #> 150   Alkalihalophilus        Male           4 0.000000e+00 #> 151           Brucella        Male           4 1.538370e-02 #> 152    Corynebacterium        Male           4 8.558884e-02 #> 153      Cutibacterium        Male           4 1.387925e-04 #> 154            Delftia        Male           4 0.000000e+00 #> 155       Enterobacter        Male           4 3.855347e-04 #> 156        Escherichia        Male           4 5.078720e-04 #> 157        Haemophilus        Male           4 1.523616e-03 #> 158            Kocuria        Male           4 0.000000e+00 #> 159           Listeria        Male           4 8.320981e-02 #> 160          Moraxella        Male           4 1.400762e-03 #> 161         Mycoplasma        Male           4 9.850046e-03 #> 162 Noviherbaspirillum        Male           4 0.000000e+00 #> 163              Other        Male           4 0.000000e+00 #> 164         Paracoccus        Male           4 8.275643e-02 #> 165        Pseudomonas        Male           4 9.242495e-04 #> 166     Staphylococcus        Male           4 1.387309e-01 #> 167      Streptococcus        Male           4 3.964288e-03 #> 168          Weissella        Male           4 1.512924e-02 #> 169      Acinetobacter      Female           5 4.208038e-01 #> 170          Aeromonas      Female           5 5.855805e-03 #> 171   Alkalihalophilus      Female           5 0.000000e+00 #> 172           Brucella      Female           5 2.853741e-02 #> 173    Corynebacterium      Female           5 9.247282e-02 #> 174      Cutibacterium      Female           5 1.029391e-03 #> 175            Delftia      Female           5 1.217137e-04 #> 176       Enterobacter      Female           5 1.254729e-03 #> 177        Escherichia      Female           5 2.573825e-03 #> 178        Haemophilus      Female           5 6.746807e-04 #> 179            Kocuria      Female           5 1.887340e-03 #> 180           Listeria      Female           5 1.179112e-01 #> 181          Moraxella      Female           5 9.307237e-04 #> 182         Mycoplasma      Female           5 4.545103e-02 #> 183 Noviherbaspirillum      Female           5 0.000000e+00 #> 184              Other      Female           5 0.000000e+00 #> 185         Paracoccus      Female           5 9.647791e-02 #> 186        Pseudomonas      Female           5 1.919608e-02 #> 187     Staphylococcus      Female           5 1.452855e-01 #> 188      Streptococcus      Female           5 1.546484e-02 #> 189          Weissella      Female           5 4.071162e-03 #> 190      Acinetobacter        Male           5 7.451893e-01 #> 191          Aeromonas        Male           5 0.000000e+00 #> 192   Alkalihalophilus        Male           5 0.000000e+00 #> 193           Brucella        Male           5 1.470818e-02 #> 194    Corynebacterium        Male           5 3.768422e-02 #> 195      Cutibacterium        Male           5 8.509604e-04 #> 196            Delftia        Male           5 0.000000e+00 #> 197       Enterobacter        Male           5 0.000000e+00 #> 198        Escherichia        Male           5 7.292882e-04 #> 199        Haemophilus        Male           5 4.862631e-04 #> 200            Kocuria        Male           5 0.000000e+00 #> 201           Listeria        Male           5 2.436014e-02 #> 202          Moraxella        Male           5 1.896149e-03 #> 203         Mycoplasma        Male           5 1.918182e-02 #> 204 Noviherbaspirillum        Male           5 3.646973e-04 #> 205              Other        Male           5 0.000000e+00 #> 206         Paracoccus        Male           5 3.731782e-02 #> 207        Pseudomonas        Male           5 1.614332e-02 #> 208     Staphylococcus        Male           5 9.094953e-02 #> 209      Streptococcus        Male           5 3.160710e-03 #> 210          Weissella        Male           5 6.977620e-03"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_summary_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a table summarizing reads aggregated by grouping variables on a unit — get_summary_table","title":"Create a table summarizing reads aggregated by grouping variables on a unit — get_summary_table","text":"function takes MultiAssayExperiment microbial read counts aggregates one grouping vars within unit.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_summary_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a table summarizing reads aggregated by grouping variables on a unit — get_summary_table","text":"","code":"get_summary_table(dat, group_vars)"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_summary_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a table summarizing reads aggregated by grouping variables on a unit — get_summary_table","text":"dat MultiAssayExperiment object specially formatted animalcules output. group_vars character string character vector covariates found colData(dat) use grouping counts. variables listed order desired grouping.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_summary_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a table summarizing reads aggregated by grouping variables on a unit — get_summary_table","text":"data.frame grouping columns, mean_reads, sd_reads, min_reads, max_reads num_total.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_summary_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a table summarizing reads aggregated by grouping variables on a unit — get_summary_table","text":"","code":"in_dat <- system.file(\"extdata/MAE_small.RDS\", package = \"LegATo\") |> readRDS() out <- get_summary_table(in_dat, c(\"Group\", \"Subject\")) head(out) #>   Group Subject mean_reads  sd_reads min_reads max_reads num_total #> 1     A      S1     7695.6  5583.400      1492     16804         5 #> 2     A      S3    51285.0 68211.168       590    153641         5 #> 3     A      S5    28239.8 50681.578      2829    118800         5 #> 4     A      S7    24921.8 49282.734      1345    113053         5 #> 5     A      S9    25595.8 23398.934      3428     64845         5 #> 6     B     S10     3406.2  2668.049       911      7543         5"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_top_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain a data.frame of ordered taxa abundances at a given level — get_top_taxa","title":"Obtain a data.frame of ordered taxa abundances at a given level — get_top_taxa","text":"function takes MultiAssayExperiment object returns data.frame present taxa user-supplied taxonomy level, outputs average abundances taxa.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_top_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain a data.frame of ordered taxa abundances at a given level — get_top_taxa","text":"","code":"get_top_taxa(dat, taxon_level = \"genus\")"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_top_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain a data.frame of ordered taxa abundances at a given level — get_top_taxa","text":"dat MultiAssayExperiment object specially formatted animalcules output. taxon_level Character string indicating level taxonomy aggregate counts data. Must name column MultiAssayExperiment::rowData(dat).","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_top_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain a data.frame of ordered taxa abundances at a given level — get_top_taxa","text":"data.frame","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/get_top_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain a data.frame of ordered taxa abundances at a given level — get_top_taxa","text":"","code":"in_dat <- system.file(\"extdata/MAE_small.RDS\", package = \"LegATo\") |> readRDS() out <- get_top_taxa(in_dat, \"genus\") out #>                 taxon     allmeans #> 1       Acinetobacter 4.312728e-01 #> 2     Corynebacterium 1.992574e-01 #> 3      Staphylococcus 1.108285e-01 #> 4          Paracoccus 8.003312e-02 #> 5            Listeria 6.753064e-02 #> 6            Brucella 2.506886e-02 #> 7         Pseudomonas 1.577821e-02 #> 8           Moraxella 1.569116e-02 #> 9          Mycoplasma 1.524232e-02 #> 10      Streptococcus 1.317510e-02 #> 11          Aeromonas 8.084481e-03 #> 12        Escherichia 7.977552e-03 #> 13          Weissella 5.210018e-03 #> 14      Cutibacterium 2.237225e-03 #> 15       Enterobacter 8.210988e-04 #> 16        Haemophilus 5.617362e-04 #> 17            Kocuria 5.020958e-04 #> 18   Alkalihalophilus 3.584481e-04 #> 19              Other 2.604820e-04 #> 20            Delftia 7.156670e-05 #> 21 Noviherbaspirillum 3.721576e-05"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/parse_MAE_SE.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a MultiExperimentAssay object and extract the elements as data.frames — parse_MAE_SE","title":"Parse a MultiExperimentAssay object and extract the elements as data.frames — parse_MAE_SE","text":"function takes animalcules-formatted MultiAssayExperiment object parses extract named assay alongside taxonomy metadata.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/parse_MAE_SE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a MultiExperimentAssay object and extract the elements as data.frames — parse_MAE_SE","text":"","code":"parse_MAE_SE(dat, which_assay = NULL, type = \"MAE\")"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/parse_MAE_SE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a MultiExperimentAssay object and extract the elements as data.frames — parse_MAE_SE","text":"dat Either MultiAssayExperiment SummarizedExperiment object. which_assay Character string. refers assay extracted MultiAssayExperiment object type = \"MAE\". need specified type = \"SE\". Default NULL. type One \"MAE\" denoting MultiAssayExperiment \"SE\" denoting SummarizedExperiment.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/parse_MAE_SE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a MultiExperimentAssay object and extract the elements as data.frames — parse_MAE_SE","text":"Returns list 3 named data.frame elements, `counts`, `sam`,   `tax` denoting counts data, sample metadata table, taxonomy table,   respectively.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/parse_MAE_SE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse a MultiExperimentAssay object and extract the elements as data.frames — parse_MAE_SE","text":"","code":"in_dat <- system.file(\"extdata/MAE_small.RDS\", package = \"LegATo\") |> readRDS() out <- parse_MAE_SE(in_dat) head(out$tax) #>                            superkingdom         phylum               class #> Acinetobacter_bouvetii         Bacteria Proteobacteria Gammaproteobacteria #> Acinetobacter_guillouiae       Bacteria Proteobacteria Gammaproteobacteria #> Acinetobacter_gyllenbergii     Bacteria Proteobacteria Gammaproteobacteria #> Acinetobacter_indicus          Bacteria Proteobacteria Gammaproteobacteria #> Acinetobacter_johnsonii        Bacteria Proteobacteria Gammaproteobacteria #> Acinetobacter_parvus           Bacteria Proteobacteria Gammaproteobacteria #>                                   order        family         genus #> Acinetobacter_bouvetii     Moraxellales Moraxellaceae Acinetobacter #> Acinetobacter_guillouiae   Moraxellales Moraxellaceae Acinetobacter #> Acinetobacter_gyllenbergii Moraxellales Moraxellaceae Acinetobacter #> Acinetobacter_indicus      Moraxellales Moraxellaceae Acinetobacter #> Acinetobacter_johnsonii    Moraxellales Moraxellaceae Acinetobacter #> Acinetobacter_parvus       Moraxellales Moraxellaceae Acinetobacter #>                                               species #> Acinetobacter_bouvetii         Acinetobacter_bouvetii #> Acinetobacter_guillouiae     Acinetobacter_guillouiae #> Acinetobacter_gyllenbergii Acinetobacter_gyllenbergii #> Acinetobacter_indicus           Acinetobacter_indicus #> Acinetobacter_johnsonii       Acinetobacter_johnsonii #> Acinetobacter_parvus             Acinetobacter_parvus head(out$sam) #>     Sample Subject    Sex Month Group Pairing HairLength      Age #> X-1    X-1      S1 Female     1     A       1   54.59018 37.60217 #> X-2    X-2      S2 Female     1     B       1   69.32642 66.77243 #> X-3    X-3      S3 Female     1     A       2   42.91915 53.23820 #> X-4    X-4      S4 Female     1     B       2   53.18740 52.56244 #> X-5    X-5      S5 Female     1     A       3   44.28454 60.37946 #> X-6    X-6      S6 Female     1     B       3   37.66513 42.47814 head(out$counts) #>                            X-1   X-2 X-3 X-4 X-5 X-6 X-7 X-8 X-9 X-10 X-11 X-12 #> Acinetobacter_bouvetii     430 18103 810 103  74 503   6 482 264   56  123    0 #> Acinetobacter_guillouiae     0     0   0   0   0  36   0   0  48    0    0    0 #> Acinetobacter_gyllenbergii   0     5   0   0   0   5   5   7  28    3    0    0 #> Acinetobacter_indicus        6     1   1   1  11   5  11   0   2    3    4    6 #> Acinetobacter_johnsonii      0     0   9   0   0   0   0   0  27    0    0    0 #> Acinetobacter_parvus         1     0   0   2   0   0   0   0   0    0    1    0 #>                            X-13 X-14 X-15 X-16 X-17 X-18 X-19 X-20 X-21 X-22 #> Acinetobacter_bouvetii        0    0  432    0    0    0    0    0    0  424 #> Acinetobacter_guillouiae      0    0    0    0    0   11    0    0    0   47 #> Acinetobacter_gyllenbergii    0    0    0    0    0    0    0   38    0    0 #> Acinetobacter_indicus         0    1    0    0   17    0    8   13   10    2 #> Acinetobacter_johnsonii       0    2    0    0    0    0    0    0    0    0 #> Acinetobacter_parvus         10    0    0    0   71   60   11    6    8    0 #>                            X-23 X-24 X-25 X-26 X-27 X-28 X-29 X-30 X-31 X-32 #> Acinetobacter_bouvetii       23    0   31   18   12   19  900   85   13    4 #> Acinetobacter_guillouiae      0    0    2    5    2    8    2    0    0    0 #> Acinetobacter_gyllenbergii    0    0   21    0    0    0    0 3299    0    0 #> Acinetobacter_indicus         2    3    2    8    0   15    2    6    5   17 #> Acinetobacter_johnsonii       0    0    0    0  813    0    0    4    0    0 #> Acinetobacter_parvus        272    0    0    6    1    0    0    0    0    0 #>                            X-33 X-34 X-35 X-36 X-37 X-38 X-39 X-40 X-41 X-42 #> Acinetobacter_bouvetii        0  113  179    1  146    0    0    0    0    0 #> Acinetobacter_guillouiae      0    0    0    0    0    0    0    0    0    0 #> Acinetobacter_gyllenbergii    0    0    0    0    0    0    0    0    0    0 #> Acinetobacter_indicus         5    0    2    3    6    5    1    2    0    0 #> Acinetobacter_johnsonii       0    0    0    0    0    0    0    0    0    0 #> Acinetobacter_parvus          0    0    0   11    0    0    2    0    2    0 #>                            X-43 X-44 X-45 X-46 X-47 X-48 X-49 X-50 #> Acinetobacter_bouvetii        0   10   10    0   46    0   44    1 #> Acinetobacter_guillouiae      7    0    0    0    9    0    0    0 #> Acinetobacter_gyllenbergii    0    7   12    2    0   13 1779    0 #> Acinetobacter_indicus         2    7    4    1    0    2    0    1 #> Acinetobacter_johnsonii       0    0    0    0    0    0    0    0 #> Acinetobacter_parvus          0    0   24    0    0    0    0    0  out2 <- parse_MAE_SE(in_dat[[\"MicrobeGenetics\"]],                      which_assay = \"MGX\", type = \"SE\")"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_alluvial.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an alluvial diagram of microbial relative abundance — plot_alluvial","title":"Plot an alluvial diagram of microbial relative abundance — plot_alluvial","text":"function takes MultiAssayExperiment object returns alluvial diagram microbe relative abundances. function takes single covariate optional variable create grid multiple plots.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_alluvial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an alluvial diagram of microbial relative abundance — plot_alluvial","text":"","code":"plot_alluvial(   dat,   taxon_level,   covariate_1 = NULL,   covariate_time,   palette_input = NULL,   title = paste(\"Relative abundance at\", taxon_level, \"level\"),   subtitle = NULL )"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_alluvial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an alluvial diagram of microbial relative abundance — plot_alluvial","text":"dat MultiAssayExperiment object specially formatted animalcules output. taxon_level Character string indicating level taxonomy aggregate counts data. Must name column MultiAssayExperiment::rowData(dat). covariate_1 Character string giving name column MultiAssayExperiment::colData(dat) create multiple plots. default NULL. covariate_time Character string giving name discrete time-based covariate metadata group abundances . palette_input character vector colors minimum length number taxa (specified taxon_level). default NULL relies ggplot2's default scheme. title character string providing plot title. subtitle character string providing plot subtitle. default NULL.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_alluvial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an alluvial diagram of microbial relative abundance — plot_alluvial","text":"ggplot2 plot.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_alluvial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot an alluvial diagram of microbial relative abundance — plot_alluvial","text":"manipulation specific parameters desired, users can add ggplot2 function calls output function.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_alluvial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot an alluvial diagram of microbial relative abundance — plot_alluvial","text":"","code":"in_dat <- system.file(\"extdata/MAE_small.RDS\", package = \"LegATo\") |> readRDS() plot_alluvial(in_dat, taxon_level = \"family\", covariate_1 = \"Group\", covariate_time = \"Month\",               palette_input = rainbow(25))"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_spaghetti.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a spaghetti volatility plot of microbial abundance for a given taxon — plot_spaghetti","title":"Plot a spaghetti volatility plot of microbial abundance for a given taxon — plot_spaghetti","text":"function takes MultiAssayExperiment object returns spaghetti plot microbial abundance delineated unit, subject.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_spaghetti.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a spaghetti volatility plot of microbial abundance for a given taxon — plot_spaghetti","text":"","code":"plot_spaghetti(   dat,   covariate_time,   covariate_1 = NULL,   unit_var,   taxon_level,   which_taxon,   palette_input = NULL,   title = \"Spaghetti Plot\",   subtitle = NULL )"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_spaghetti.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a spaghetti volatility plot of microbial abundance for a given taxon — plot_spaghetti","text":"dat MultiAssayExperiment object specially formatted animalcules output. covariate_time Character string giving name discrete time-based covariate metadata group abundances . covariate_1 Character string, name covariate `dat` color group samples. Default NULL. unit_var Character string, name column delineating unit microbial abundances changing time. likely something akin subject repeated measurements made . taxon_level Character string indicating level taxonomy aggregate counts data. Must name column MultiAssayExperiment::rowData(dat). which_taxon Character string, name taxon plot specified taxon level. palette_input character vector colors minimum length number taxa (specified taxon_level). default NULL relies ggplot2's default scheme. title character string providing plot title. subtitle character string providing plot subtitle. default NULL.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_spaghetti.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a spaghetti volatility plot of microbial abundance for a given taxon — plot_spaghetti","text":"ggplot2 plot.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_spaghetti.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a spaghetti volatility plot of microbial abundance for a given taxon — plot_spaghetti","text":"manipulation specific parameters desired, users can add ggplot2 function calls output function.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_spaghetti.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a spaghetti volatility plot of microbial abundance for a given taxon — plot_spaghetti","text":"","code":"in_dat <- system.file(\"extdata/MAE_small.RDS\", package = \"LegATo\") |> readRDS() all_taxa <- get_top_taxa(in_dat, \"phylum\") plot_spaghetti(in_dat, taxon_level = \"phylum\", covariate_1 = \"Group\", covariate_time = \"Month\",               unit_var = \"Subject\", which_taxon = all_taxa$taxon[1],               palette_input = rainbow(25))"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_stacked_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a stacked area chart of microbial relative abundance — plot_stacked_area","title":"Plot a stacked area chart of microbial relative abundance — plot_stacked_area","text":"function takes MultiAssayExperiment object returns stacked area chart microbe relative abundances. function takes single covariate optional variable create grid multiple plots.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_stacked_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a stacked area chart of microbial relative abundance — plot_stacked_area","text":"","code":"plot_stacked_area(   dat,   taxon_level,   covariate_1 = NULL,   covariate_time,   palette_input = NULL,   title = paste(\"Relative abundance at\", taxon_level, \"level\"),   subtitle = NULL )"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_stacked_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a stacked area chart of microbial relative abundance — plot_stacked_area","text":"dat MultiAssayExperiment object specially formatted animalcules output. taxon_level Character string indicating level taxonomy aggregate counts data. Must name column MultiAssayExperiment::rowData(dat). covariate_1 Character string giving name column MultiAssayExperiment::colData(dat) create multiple plots. default NULL. covariate_time Character string giving name discrete time-based covariate metadata group abundances . palette_input character vector colors minimum length number taxa (specified taxon_level). default NULL relies ggplot2's default scheme. title character string providing plot title. subtitle character string providing plot subtitle. default NULL.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_stacked_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a stacked area chart of microbial relative abundance — plot_stacked_area","text":"ggplot2 plot.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_stacked_area.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a stacked area chart of microbial relative abundance — plot_stacked_area","text":"manipulation specific parameters desired, users can add ggplot2 function calls output function.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_stacked_area.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a stacked area chart of microbial relative abundance — plot_stacked_area","text":"","code":"in_dat <- system.file(\"extdata/MAE_small.RDS\", package = \"LegATo\") |> readRDS() plot_stacked_area(in_dat, taxon_level = \"phylum\", covariate_1 = \"Group\",                   covariate_time = \"Month\",                   palette_input = rainbow(25))"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_stacked_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a stacked bar chart of microbial relative abundance — plot_stacked_bar","title":"Plot a stacked bar chart of microbial relative abundance — plot_stacked_bar","text":"function takes MultiAssayExperiment object returns stacked bar plot microbe relative abundances. function takes single covariate optional variable create multiple gridded plots.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_stacked_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a stacked bar chart of microbial relative abundance — plot_stacked_bar","text":"","code":"plot_stacked_bar(   dat,   taxon_level,   covariate_1 = NULL,   covariate_time,   palette_input = NULL,   title = paste(\"Relative abundance at\", taxon_level, \"level\"),   subtitle = NULL )"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_stacked_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a stacked bar chart of microbial relative abundance — plot_stacked_bar","text":"dat MultiAssayExperiment object specially formatted animalcules output. taxon_level Character string indicating level taxonomy aggregate counts data. Must name column MultiAssayExperiment::rowData(dat). covariate_1 Character string giving name column MultiAssayExperiment::colData(dat) create multiple plots. default NULL. covariate_time Character string giving name discrete time-based covariate metadata group abundances . palette_input character vector colors minimum length number taxa (specified taxon_level). default NULL relies ggplot2's default scheme. title character string providing plot title. subtitle character string providing plot subtitle. default NULL.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_stacked_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a stacked bar chart of microbial relative abundance — plot_stacked_bar","text":"ggplot2 plot.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_stacked_bar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a stacked bar chart of microbial relative abundance — plot_stacked_bar","text":"manipulation specific parameters desired, users can add ggplot2 function calls output function.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/plot_stacked_bar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a stacked bar chart of microbial relative abundance — plot_stacked_bar","text":"","code":"in_dat <- system.file(\"extdata/MAE_small.RDS\", package = \"LegATo\") |> readRDS() plot_stacked_bar(in_dat, taxon_level = \"family\", covariate_1 = \"Group\",                   covariate_time = \"Month\",                   palette_input = rainbow(25))"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/run_gee_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Generalized Estimating Equations (GEEs) on longitudinal microbiome\ndata — run_gee_model","title":"Compute Generalized Estimating Equations (GEEs) on longitudinal microbiome\ndata — run_gee_model","text":"function takes animalcules-formatted MultiAssayExperiment runs independent GEE model taxon. model predicts taxon log CPM abundance product fixed-effects covariates conditional grouping ID variable, usually unit repeated measurements taken. modeling approach works best small datasets multiple samples across many (>40) clusters/units.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/run_gee_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Generalized Estimating Equations (GEEs) on longitudinal microbiome\ndata — run_gee_model","text":"","code":"run_gee_model(   dat,   taxon_level = \"genus\",   unit_var,   fixed_cov,   corstr = \"ar1\",   p_adj_method = \"fdr\",   plot_out = FALSE,   plotsave_loc = \".\",   plot_terms = NULL,   ... )"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/run_gee_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Generalized Estimating Equations (GEEs) on longitudinal microbiome\ndata — run_gee_model","text":"dat MultiAssayExperiment object specially formatted animalcules output. taxon_level Character string, default \"genus\". unit_var Character string giving variable containing identifiers unit multiple measurements conducted, e.g. subjects. Default NULL; must supplied paired = FALSE. fixed_cov character vector naming covariates tested. corstr character string specifying correlation structure. following permitted: '\"independence\"', '\"exchangeable\"', '\"ar1\"', '\"unstructured\"'. p_adj_method character string specifying correction method. Can abbreviated. See details. Default \"fdr\". plot_out Logical indicating whether plots output alongside model results. Default FALSE. plotsave_loc character string giving folder path save plot outputs. defaults current working directory. plot_terms Character vector. terms examined plot output? Can overlap fixed_cov inputs. ... arguments passed ggsave plot creation.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/run_gee_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Generalized Estimating Equations (GEEs) on longitudinal microbiome\ndata — run_gee_model","text":"P-values adjusted model coefficients within taxon. following methods permitted: c(\"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"\", \"fdr\", \"none\")","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/run_gee_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Generalized Estimating Equations (GEEs) on longitudinal microbiome\ndata — run_gee_model","text":"","code":"in_dat <- system.file(\"extdata/MAE_small.RDS\", package = \"LegATo\") |>               readRDS() out <- run_gee_model(in_dat, taxon_level = \"genus\", unit_var = \"Subject\",                      fixed_cov = c(\"HairLength\", \"Age\", \"Group\", \"Sex\"),                      corstr = \"ar1\") head(out) #>   Coefficient Coefficient Estimate Standard Error   Statistic Unadj p-value #> 1 (Intercept)           14967.2309    14653.11433  1.04333323  3.070475e-01 #> 2 (Intercept)          -43274.3001    24870.23678  3.02761233  8.185840e-02 #> 3 (Intercept)            -175.3424      709.69597  0.06104203  8.048565e-01 #> 4 (Intercept)             347.2791      223.19214  2.42102630  1.197165e-01 #> 5 (Intercept)             300.2225       75.99722 15.60598450  7.800731e-05 #> 6 (Intercept)             115.5378       42.26260  7.47370218  6.260668e-03 #>   Lower 95% CI Upper 95% CI           Taxon Adj p-value #> 1 -13752.34544   43686.8073   Acinetobacter 0.379293989 #> 2 -92019.06846    5470.4683 Corynebacterium 0.245575188 #> 3  -1566.32090    1215.6362  Staphylococcus 0.889578219 #> 4    -90.16945     784.7277      Paracoccus 0.272344326 #> 5    151.27071     449.1743        Listeria 0.001638154 #> 6     32.70463     198.3710        Brucella 0.043824675"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/test_hotelling_t2.html","id":null,"dir":"Reference","previous_headings":"","what":"Conduct a multivariate Hotelling's T-squared test — test_hotelling_t2","title":"Conduct a multivariate Hotelling's T-squared test — test_hotelling_t2","text":"function takes animalcules-formatted MultiAssayExperiment object runs multivariate Hotelling's T-squared test. test expects comparison two distinct groups, compares abundances top microbes given taxon level groups. function allows paired unpaired tests. test null hypothesis population mean vectors equal, alternative unequal.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/test_hotelling_t2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conduct a multivariate Hotelling's T-squared test — test_hotelling_t2","text":"","code":"test_hotelling_t2(   dat,   test_index = NULL,   taxon_level = \"genus\",   num_taxa,   grouping_var,   paired = FALSE,   pairing_var = NULL,   unit_var = NULL,   save_table_loc = \".\" )"},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/test_hotelling_t2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conduct a multivariate Hotelling's T-squared test — test_hotelling_t2","text":"dat MultiAssayExperiment object specially formatted animalcules output. test_index argument used subsetting input dat, can character, logical, integer, list List vector. Default NULL. taxon_level Character string, default \"genus\". num_taxa number abundant taxa test. Needs small enough avoid n > p issues n smallest number samples units given group, p number microbes tested. grouping_var Character string, name DICHOTOMOUS grouping variable metadata dat. paired Logical indicating whether paired test conducted. Default FALSE unpaired test. pairing_var Character string giving variable containing pairing information. variable integer form. Must supplied paired = TRUE, otherwise default NULL. unit_var Character string giving variable containing identifiers unit multiple measurements conducted, e.g. subjects. Default NULL; must supplied paired = FALSE. save_table_loc character string giving folder path save t.test results. Note conducted Hotelling's T-test value <0.05.  Defaults current working directory.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/test_hotelling_t2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conduct a multivariate Hotelling's T-squared test — test_hotelling_t2","text":"list elements \"df1\", \"df2\", \"crit_F\", \"F_stat\" \"pvalue\" giving results test.","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/test_hotelling_t2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conduct a multivariate Hotelling's T-squared test — test_hotelling_t2","text":"Hotelling's t-squared statistic (t2) generalization Student's t-statistic used multivariate hypothesis testing test means different populations. Note entries pairs missing values excluded. Referenced articles implementation tests: https://online.stat.psu.edu/stat505/lesson/7/7.1/7.1.14 https://online.stat.psu.edu/stat505/lesson/7/7.1/7.1.15 https://online.stat.psu.edu/stat505/lesson/7/7.1/7.1.4 https://online.stat.psu.edu/stat505/lesson/7/7.1/7.1.9","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/reference/test_hotelling_t2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conduct a multivariate Hotelling's T-squared test — test_hotelling_t2","text":"","code":"dat <- system.file(\"extdata\", \"MAE.RDS\", package = \"LegATo\") |> readRDS() dat_0.05 <- filter_animalcules_MAE(dat, 0.05) out1 <- test_hotelling_t2(dat = dat_0.05,                   test_index = which(dat_0.05$MothChild == \"Infant\" &                                        dat_0.05$timepoint == 6),                   taxon_level = \"genus\",                   # To avoid n < p, use top 5-6 species                   num_taxa = 6,                   paired = TRUE,                   grouping_var = \"HIVStatus\",                   pairing_var = \"pairing\") out1                   #> $df1 #> [1] 6 #>  #> $df2 #> [1] 2 #>  #> $crit_F #> [1] 19.32953 #>  #> $F_stat #> [1] 2.578132 #>  #> $pvalue #> [1] 0.3056466 #>   out <- test_hotelling_t2(dat = dat_0.05,                   test_index = which(dat_0.05$MothChild == \"Mother\" &                                        dat_0.05$timepoint == 0),                   taxon_level = \"genus\",                   # To avoid n < p, use top 5-6 species                   num_taxa = 12,                   grouping_var = \"HIVStatus\",                   unit_var = \"Subject\",                   paired = FALSE) out                   #> $df1 #> [1] 12 #>  #> $df2 #> [1] 7 #>  #> $crit_F #> [1] 3.574676 #>  #> $F_stat #> [1] 0.4781539 #>  #> $pvalue #> [1] 0.875078 #>"},{"path":"https://aubreyodom.github.io/LegATo-docs/news/index.html","id":"legato-0990-spring-2024","dir":"Changelog","previous_headings":"","what":"LegATo 0.99.0 (Spring 2024)","title":"LegATo 0.99.0 (Spring 2024)","text":"Pre-Release version LegATo","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/news/index.html","id":"bug-fixes-0-99-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"LegATo 0.99.0 (Spring 2024)","text":"None report","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/news/index.html","id":"major-changes-0-99-0","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"LegATo 0.99.0 (Spring 2024)","text":"Readying big leagues Pincuses contributed etymology icon","code":""},{"path":"https://aubreyodom.github.io/LegATo-docs/news/index.html","id":"minor-changes-0-99-0","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"LegATo 0.99.0 (Spring 2024)","text":"Nearly many major changes","code":""}]
